# HTTP에서 HTTPS로 리다이렉트
server {
    listen 80;
    server_name bookmile.site www.bookmile.site;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 설정
server {
    listen 443 ssl;
    server_name bookmile.site www.bookmile.site;

    # SSL 인증서 경로 (Let's Encrypt 인증서)
    ssl_certificate /etc/letsencrypt/live/bookmile.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bookmile.site/privkey.pem;

    # SSL 설정 강화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 애플리케이션 프록시
    location / {
        proxy_pass http://application:8080; # 'application'은 docker-compose.yml에서 정의된 서비스 이름
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       # CORS 설정 추가
        add_header 'Access-Control-Allow-Origin' 'https://bookmile.site' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
    }

    # Preflight 요청 처리 (OPTIONS)
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://bookmile.site';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
            return 204;
        }
        proxy_pass http://application:8080;
    }
}
